[{"/Users/teancum/omni_mint/src/index.js":"1","/Users/teancum/omni_mint/src/App.js":"2","/Users/teancum/omni_mint/src/reportWebVitals.js":"3","/Users/teancum/omni_mint/src/PreSalePage/PreSale.js":"4","/Users/teancum/omni_mint/src/contracts/contractAddress.js":"5","/Users/teancum/omni_mint/src/contracts/ABIs.js":"6"},{"size":500,"mtime":1638560241040,"results":"7","hashOfConfig":"8"},{"size":264,"mtime":1638565797347,"results":"9","hashOfConfig":"8"},{"size":362,"mtime":1638560241041,"results":"10","hashOfConfig":"8"},{"size":5972,"mtime":1638768346972,"results":"11","hashOfConfig":"8"},{"size":88,"mtime":1638652866271,"results":"12","hashOfConfig":"8"},{"size":12956,"mtime":1638652963504,"results":"13","hashOfConfig":"8"},{"filePath":"14","messages":"15","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"16"},"1yzaucr",{"filePath":"17","messages":"18","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"16"},{"filePath":"19","messages":"20","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"16"},{"filePath":"21","messages":"22","errorCount":0,"fatalErrorCount":0,"warningCount":7,"fixableErrorCount":0,"fixableWarningCount":0,"source":"23"},{"filePath":"24","messages":"25","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"16"},{"filePath":"26","messages":"27","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"16"},"/Users/teancum/omni_mint/src/index.js",[],["28","29"],"/Users/teancum/omni_mint/src/App.js",[],"/Users/teancum/omni_mint/src/reportWebVitals.js",[],"/Users/teancum/omni_mint/src/PreSalePage/PreSale.js",["30","31","32","33","34","35","36"],"import React from \"react\";\nimport style from \"./style.module.css\";\nimport { useEffect,useState } from \"react\";\n//import Background from '../imgs/goddess.jpeg';\nimport Background from '../imgs/logo.jpg';\n//import Background from '../imgs/background.png';\nimport header_picture from '../imgs/header_picture.png'\n\nimport connect_wallet from '../imgs/connect_wallet.png'\n\nimport \"bootstrap/dist/css/bootstrap.min.css\";\n\nimport DropdownButton from 'react-bootstrap/DropdownButton';\nimport Dropdown from 'react-bootstrap/Dropdown'\n\n\nimport { Button } from \"react-bootstrap\";\nimport Web3 from \"web3\";\n\nimport { tokenABI } from \"../contracts/ABIs\";\nimport { tokenAddress } from \"../contracts/contractAddress\";\n\nimport mint from \"../imgs/mint.png\";\nimport omni_text from \"../imgs/new_writing.png\"\nimport logo from \"../imgs/logo.jpg\"\n\n//import { ethers } from \"ethers\";\n\nconst PreSale = () => {\n  const [omniContract,setOmniContract] = useState(null);\n  const [account, setAccount] = useState(null);\n\n  var sectionStyle = {\n        width: \"100%\",\n        height: \"400px\",\n        backgroundImage: \"url(\" + Background + \")\"\n      };\n\n  var price = 0.05;\n\n  const [numOmnis,setValue]=useState('1');\n\n  const handleSelect=(e)=>{\n    console.log(e);\n    setValue(e)\n    }\n  //const [preSaleAmount, setPreSaleAmount] = useState(1000);\n\n  const loadWeb3 = async () => {\n    if (window.ethereum) {\n      window.web3 = new Web3(window.ethereum);\n      const web3 = window.web3;\n      await window.ethereum.enable();\n\n      const account = await web3.eth.getAccounts();\n      console.log(account);\n      setAccount(account[0]);\n\n      const contract = new web3.eth.Contract(tokenABI, tokenAddress);\n      setOmniContract(contract);\n    } else if (window.web3) {\n      window.web3 = new Web3(window.web3.currentProvider);\n      const web3 = window.web3;\n\n      const account = await web3.eth.getAccounts();\n      console.log(account);\n      setAccount(account[0]);\n\n      const contract = new web3.eth.Contract(tokenABI, tokenAddress);\n      setOmniContract(contract);\n    } else {\n      window.alert(\n        \"Non-Ethereum browser detected. You should consider trying MetaMask!\"\n      );\n    }\n  };\n\n  const BuyToken = async (numberOfTokens) => {\n    const web3 = window.web3;\n    const contract = new web3.eth.Contract(tokenABI, tokenAddress);\n    setOmniContract(contract);\n\n    console.log(account);\n\n    var cost = price * numberOfTokens;\n    \n    let tokenTransaction;\n    let tokenId = null;\n//    let transactionData;\n    let tokenIdArray = [];\n\n    tokenTransaction = await contract.methods.presaleMintItems(numberOfTokens).send({\n      from: account,\n//      gas: 3000000,\n      value: web3.utils.toWei(cost.toString(), \"ether\"),\n    });\n    console.log(tokenABI);\n\n    tokenId = JSON.parse(JSON.stringify(tokenTransaction))[\"events\"][\n      \"Transfer\"\n    ][\"returnValues\"];\n\n    document.getElementById(\"mint\").classList.add(\"active-bear\");\n\n\n    if (tokenId !== null) window.alert(\"Token ID: \" + JSON.stringify(tokenId));\n    else window.alert(\"Token IDS: \" + JSON.stringify(tokenIdArray));\n    // await updatePreSale();\n  };\n\n  return (\n\n      <body className=\"background\"\n                                    style={{\n\n                                      backgroundImage: `url(${Background})`,\n                                      backgroundPosition: 'center',\n                                      backgroundSize: 'cover',\n                                      backgroundRepeat: 'no-repeat',\n                                      width: '100vw',\n                                      height: '100vh'\n                                    }} >\n\n\n            <div style={{ textAlign: \"center\" }}>\n                <img\n                  src={header_picture}\n                  alt=\"img\"\n                  width=\"1000\" \n                  height=\"200\"\n                  id=\"mint\"\n\n                />\n            </div>\n     \n            <DropdownButton\n             style={{ textAlign: \"center\" }}\n             title={numOmnis}\n             id=\"dropdown-menu\"\n             onSelect={handleSelect}\n\n            >\n                    <Dropdown.Item eventKey=\"1\">1</Dropdown.Item>\n                    <Dropdown.Item eventKey=\"2\">2</Dropdown.Item>\n                    <Dropdown.Item eventKey=\"3\">3</Dropdown.Item>\n                    <Dropdown.Item eventKey=\"4\">4</Dropdown.Item>\n                    <Dropdown.Item eventKey=\"5\">5</Dropdown.Item>\n                    <Dropdown.Item eventKey=\"6\">6</Dropdown.Item>\n                    <Dropdown.Item eventKey=\"7\">7</Dropdown.Item>\n                    <Dropdown.Item eventKey=\"8\">8</Dropdown.Item>\n                    <Dropdown.Item eventKey=\"9\">9</Dropdown.Item>\n                    <Dropdown.Item eventKey=\"10\">10</Dropdown.Item>\n                    <Dropdown.Item eventKey=\"10\">15</Dropdown.Item>\n                    <Dropdown.Item eventKey=\"10\">20</Dropdown.Item>\n            </DropdownButton>\n\n            <h2 style={{ textAlign: \"center\" }}></h2>\n\n            <div style={{ textAlign: \"center\" }}>\n              <a>\n                <img\n                  src={mint}\n                  alt=\"img\"\n                  onClick={() => BuyToken(numOmnis)}\n                  width=\"300\" \n                  height=\"100\"\n                  id=\"mint\"\n\n                />\n              </a>\n            </div>\n\n\n            <div style={{ textAlign: \"center\" }}>\n                <img\n                  src={omni_text}\n                  alt=\"img\"\n                  width=\"1000\" \n                  height=\"200\"\n                  id=\"mint\"\n\n                />\n\n            </div>\n\n\n\n          <p className={style.address} style={{ textAlign: \"center\" }}>\n            YOUR ADDRESS:{account}\n          </p>\n          <div style={{ textAlign: \"center\" }}>\n            <div className={style.wallet_btn}>\n              <Button onClick={loadWeb3}>CONNECT WALLET</Button>\n            </div>\n          </div>>\n\n      </body>\n\n\n\n  );\n};\n\nexport default PreSale;\n","/Users/teancum/omni_mint/src/contracts/contractAddress.js",[],"/Users/teancum/omni_mint/src/contracts/ABIs.js",[],{"ruleId":"37","replacedBy":"38"},{"ruleId":"39","replacedBy":"40"},{"ruleId":"41","severity":1,"message":"42","line":3,"column":10,"nodeType":"43","messageId":"44","endLine":3,"endColumn":19},{"ruleId":"41","severity":1,"message":"45","line":9,"column":8,"nodeType":"43","messageId":"44","endLine":9,"endColumn":22},{"ruleId":"41","severity":1,"message":"46","line":25,"column":8,"nodeType":"43","messageId":"44","endLine":25,"endColumn":12},{"ruleId":"41","severity":1,"message":"47","line":30,"column":10,"nodeType":"43","messageId":"44","endLine":30,"endColumn":22},{"ruleId":"41","severity":1,"message":"48","line":33,"column":7,"nodeType":"43","messageId":"44","endLine":33,"endColumn":19},{"ruleId":"49","severity":1,"message":"50","line":157,"column":13,"nodeType":"51","endLine":157,"endColumn":49},{"ruleId":"52","severity":1,"message":"53","line":160,"column":15,"nodeType":"51","endLine":160,"endColumn":18},"no-native-reassign",["54"],"no-negated-in-lhs",["55"],"no-unused-vars","'useEffect' is defined but never used.","Identifier","unusedVar","'connect_wallet' is defined but never used.","'logo' is defined but never used.","'omniContract' is assigned a value but never used.","'sectionStyle' is assigned a value but never used.","jsx-a11y/heading-has-content","Headings must have content and the content must be accessible by a screen reader.","JSXOpeningElement","jsx-a11y/anchor-is-valid","The href attribute is required for an anchor to be keyboard accessible. Provide a valid, navigable address as the href value. If you cannot provide an href, but still need the element to resemble a link, use a button and change it with appropriate styles. Learn more: https://github.com/jsx-eslint/eslint-plugin-jsx-a11y/blob/HEAD/docs/rules/anchor-is-valid.md","no-global-assign","no-unsafe-negation"]